#include <iostream>
#include <iomanip>
#include <time.h>
using namespace std;

//Recurtion way

void CreateArrayWithRandomElements(int* p, int numberOfElements, int start, int end, int i);
void PrintArray(int* p, const int numberOfElements, int i);
int CountElements(int* p, int numberOfElements, int count, int i);
int SumElements(int* p, int numberOfElements, int sum, int i);
void TurnToZero(int* p, int numberOfElements, int i);

int main()
{
 	srand((unsigned)time(NULL)); 

	const int n = 24;
	int p[n];

	int Low = -10;
	int High = 14;
	CreateArrayWithRandomElements(p, n, Low, High, 0);
	cout << "Array with Random elements:" << endl;
	PrintArray(p, n, 0);
	cout << "Number of right elements: " << setw(1) << CountElements(p, n, 0, 0) << endl;
	cout << "Sum of right elements: " << setw(1) << SumElements(p, n, 0, 0) << endl;
	TurnToZero(p, n, 0);
	PrintArray(p, n, 0);
}

void CreateArrayWithRandomElements(int * p, int numberOfElements, int start, int end, int i) {
	p[i] = start + rand() % (end - start + 1);
	if (i < numberOfElements - 1) {
		CreateArrayWithRandomElements(p, numberOfElements, start, end, i + 1);
	}
}
void PrintArray(int* p, const int numberOfElements, int i)
{
	cout << "p[" << setw(1) << i << "] = " << setw(1) << p[i] << "; ";
	if (i < numberOfElements - 1)
		PrintArray(p, numberOfElements, i + 1);
	else
		cout << endl;
}

int CountElements(int* p, int numberOfElements, int count, int i) {
	if (i < numberOfElements) {
		if (p[i] > 0 || !(p[i] % 3 == 0)) {
			count++;
		}
		return CountElements(p, numberOfElements, count, i + 1);
	}
	return count;
}

int SumElements(int* p, int numberOfElements, int sum, int i) {
	if (i < numberOfElements) {
		if (p[i] > 0 || !(p[i] % 3 == 0)) {
			sum += p[i];
		}
		return SumElements(p, numberOfElements, sum, i + 1);
	}
	return sum;
}

void TurnToZero(int* p, int numberOfElements, int i) {
	if (i < numberOfElements) {
		if (p[i] > 0 || !(p[i] % 3 == 0)) {
			p[i] = 0;
		}
		TurnToZero(p, numberOfElements, i + 1);
	}
}
